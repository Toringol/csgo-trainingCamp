// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
	"paths": {
		"/": {
			"get": {
				"description": "Home page updates and blog posts, checks session",
				"consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
				],
				"summary": "Get home content and check user session",
				"operationId": "handleHomePage",
				"parameters": [
					{
						"in": "cookie",
						"name": "SessionID",
						"description": "Encrypted session in cookie header"
					}
				],
				"responses": {
					"200": {
						"description": "Valid cookie",
                        "schema": {
							"type": "object",
							"$ref": "#/definitions/User"
						}
					},
					"201": {
						"description": "Unvalid cookie",
                        "schema": {
							"type": "string"
						}
					},
					"500": {
						"description": "DataBase error",
						"schema": {
							"type": "string",
							"$ref": "Internal DB Error"
						}
					}
				}
			}
		}
	},
	"definitions": {
        "User": {
			"type": "object",
            "properties": {
                "ID": {
                    "type": "integer",
                    "format": "int64"
                },
                "Username": {
                    "type": "string"
                },
                "Email": {
                    "type": "string"
                },
                "Password": {
                    "type": "string"
                },
                "Avatar": {
                    "type": "string"
                }
            }    
		},
		"SessionID": {
			"type": "object",
            "properties": {
                "ID": {
                    "type": "string"
                }
            }    
		},
		"Session": {
			"type": "object",
            "properties": {
                "Username": {
                    "type": "string"
                },
                "Useragent": {
                    "type": "string"
                }
            }    
		}
    },
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "0.1",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "Swagger CS-GO Backend API",
	Description: "This is CS-GO Backend Server\nServer provides service for players that want to practise their skills and improve it",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
